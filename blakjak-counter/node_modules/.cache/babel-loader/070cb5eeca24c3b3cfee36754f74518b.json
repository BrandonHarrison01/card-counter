{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\bbbra\\\\OneDrive\\\\Documents\\\\GitHub\\\\card-counter\\\\blakjak-counter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\bbbra\\\\OneDrive\\\\Documents\\\\GitHub\\\\card-counter\\\\blakjak-counter\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport './App.scss';\n\nfunction App() {\n  const _useState = useState(52),\n        _useState2 = _slicedToArray(_useState, 2),\n        deck = _useState2[0],\n        setDeck = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        lowThresh = _useState4[0],\n        setLowThresh = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        medThresh = _useState6[0],\n        setMedThresh = _useState6[1];\n\n  const _useState7 = useState(0),\n        _useState8 = _slicedToArray(_useState7, 2),\n        highThresh = _useState8[0],\n        setHighThresh = _useState8[1];\n\n  const incrementLow = () => {\n    if (lowThresh < 20) {\n      setLowThresh(lowThresh + 1);\n      setDeck(deck - 1);\n    }\n  };\n\n  const incrementMed = () => {\n    if (medThresh < 12) {\n      setMedThresh(medThresh + 1);\n      setDeck(deck - 1);\n    }\n  };\n\n  const incrementHigh = () => {\n    if (highThresh < 20) {\n      setHighThresh(highThresh + 1);\n      setDeck(deck - 1);\n    }\n  };\n\n  const reset = () => {\n    setLowThresh(0);\n    setMedThresh(0);\n    setHighThresh(0);\n    setDeck(52);\n  };\n\n  const low = Math.round((20 - lowThresh) / deck * 100);\n  const med = Math.round((12 - medThresh) / deck * 100);\n  const high = Math.round((20 - highThresh) / deck * 100);\n  return React.createElement(\"div\", {\n    className: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: deck > 40 ? 'green' : deck > 20 ? 'yellow' : 'red',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, deck), \" cards remaining\"), React.createElement(\"div\", {\n    className: \"thresh\",\n    onClick: () => incrementLow(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Cards\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"2\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"3\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"4\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"5\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"6\"), React.createElement(\"div\", {\n    className: \"card-data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"showing \", lowThresh, \"/20 cards\"), React.createElement(\"h5\", {\n    className: low >= 50 ? 'green' : low >= 20 ? 'yellow' : 'red',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, deck === 0 ? deck : low, \"% chance of flipping\"))), React.createElement(\"div\", {\n    className: \"thresh\",\n    onClick: () => incrementMed(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Cards\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"7\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"8\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"9\"), React.createElement(\"div\", {\n    className: \"card-data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"showing \", medThresh, \"/12 cards\"), React.createElement(\"h5\", {\n    className: med >= 50 ? 'green' : med >= 15 ? 'yellow' : 'red',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, deck === 0 ? deck : med, \"% chance of flipping\"))), React.createElement(\"div\", {\n    className: \"thresh\",\n    onClick: () => incrementHigh(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Cards\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"10\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"J\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Q\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"K\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"A\"), React.createElement(\"div\", {\n    className: \"card-data\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"showing \", highThresh, \"/20 cards\"), React.createElement(\"h5\", {\n    className: high >= 50 ? 'green' : high >= 20 ? 'yellow' : 'red',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, deck === 0 ? deck : high, \"% chance of flipping\"))), React.createElement(\"button\", {\n    onClick: () => reset(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Reset\"));\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\bbbra\\OneDrive\\Documents\\GitHub\\card-counter\\blakjak-counter\\src\\App.js"],"names":["React","useState","App","deck","setDeck","lowThresh","setLowThresh","medThresh","setMedThresh","highThresh","setHighThresh","incrementLow","incrementMed","incrementHigh","reset","low","Math","round","med","high"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './App.scss';\n\nfunction App() {\n\n  const [deck, setDeck] = useState(52)\n  const [lowThresh, setLowThresh] = useState(0)\n  const [medThresh, setMedThresh] = useState(0)\n  const [highThresh, setHighThresh] = useState(0)\n\n  const incrementLow = () => {\n    if (lowThresh < 20) {\n      setLowThresh(lowThresh + 1)\n      setDeck(deck - 1)}\n  }\n\n  const incrementMed = () => {\n    if (medThresh < 12) {\n      setMedThresh(medThresh + 1)\n      setDeck(deck - 1)\n    }\n  }\n\n  const incrementHigh = () => {\n    if (highThresh < 20) {\n      setHighThresh(highThresh + 1)\n      setDeck(deck - 1)\n    }\n  }\n\n  const reset = () => {\n    setLowThresh(0)\n    setMedThresh(0)\n    setHighThresh(0)\n    setDeck(52)\n  }\n\n  const low = Math.round((20 - lowThresh) / deck * 100)\n  const med = Math.round((12 - medThresh) / deck * 100)\n  const high = Math.round((20 - highThresh) / deck * 100)\n\n  return (\n    <div className=\"app\">\n      <h1><span className={deck > 40 ? 'green' : deck > 20 ? 'yellow' : 'red' }>{deck}</span> cards remaining</h1>\n      <div className='thresh' onClick={() => incrementLow()}>\n        <h3>Cards</h3> \n        <span>2</span><span>3</span><span>4</span><span>5</span><span>6</span>\n        <div className='card-data'>\n          <h5>showing {lowThresh}/20 cards</h5>\n          <h5 className={low >= 50 ? 'green' : low >= 20 ? 'yellow' : 'red'} >{ deck === 0 ? deck : low}% chance of flipping</h5>\n        </div>\n      </div>\n      <div className='thresh' onClick={() => incrementMed()}>\n        <h3>Cards</h3> \n        <span>7</span><span>8</span><span>9</span>\n        <div className='card-data'>\n          <h5>showing {medThresh}/12 cards</h5>\n          <h5 className={med >= 50 ? 'green' : med >= 15 ? 'yellow' : 'red'} >{ deck === 0 ? deck : med}% chance of flipping</h5>\n        </div>\n      </div>\n      <div className='thresh' onClick={() => incrementHigh()} >\n        <h3>Cards</h3> \n        <span>10</span><span>J</span><span>Q</span><span>K</span><span>A</span>\n        <div className='card-data'>\n          <h5>showing {highThresh}/20 cards</h5>\n          <h5 className={high >= 50 ? 'green' : high >= 20 ? 'yellow' : 'red'} >{ deck === 0 ? deck : high}% chance of flipping</h5>\n        </div>\n      </div>\n      <button onClick={() => reset()}>Reset</button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}