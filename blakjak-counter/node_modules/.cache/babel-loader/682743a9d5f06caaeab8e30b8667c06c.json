{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\bbbra\\\\OneDrive\\\\Documents\\\\GitHub\\\\card-counter\\\\blakjak-counter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\bbbra\\\\OneDrive\\\\Documents\\\\GitHub\\\\card-counter\\\\blakjak-counter\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport HighCards from './components/HighCards';\nimport MedCards from './components/MedCards';\nimport LowCards from './components/LowCards';\nimport './App.scss';\n\nfunction App() {\n  const _useState = useState(52),\n        _useState2 = _slicedToArray(_useState, 2),\n        deck = _useState2[0],\n        setDeck = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        lowThresh = _useState4[0],\n        setLowThresh = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        medThresh = _useState6[0],\n        setMedThresh = _useState6[1];\n\n  const _useState7 = useState(0),\n        _useState8 = _slicedToArray(_useState7, 2),\n        highThresh = _useState8[0],\n        setHighThresh = _useState8[1];\n\n  const incrementLow = () => {\n    if (lowThresh < 20) {\n      setLowThresh(lowThresh + 1);\n      setDeck(deck - 1);\n    }\n  };\n\n  const incrementMed = () => {\n    if (medThresh < 12) {\n      setMedThresh(medThresh + 1);\n      setDeck(deck - 1);\n    }\n  };\n\n  const incrementHigh = () => {\n    if (highThresh < 20) {\n      setHighThresh(highThresh + 1);\n      setDeck(deck - 1);\n    }\n  };\n\n  const reset = () => {\n    setLowThresh(0);\n    setMedThresh(0);\n    setHighThresh(0);\n    setDeck(52);\n  };\n\n  const low = Math.round((20 - lowThresh) / deck * 100);\n  const med = Math.round((12 - medThresh) / deck * 100);\n  const high = Math.round((20 - highThresh) / deck * 100);\n  return React.createElement(\"div\", {\n    className: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: deck > 40 ? 'green' : deck > 20 ? 'yellow' : 'red',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, deck), \" cards remaining\"), React.createElement(LowCards, {\n    low: low,\n    incrementLow: incrementLow,\n    lowThresh: lowThresh,\n    deck: deck,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(MedCards, {\n    med: med,\n    incrementMed: incrementMed,\n    medThresh: medThresh,\n    deck: deck,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(HighCards, {\n    high: high,\n    incrementHigh: incrementHigh,\n    highThresh: highThresh,\n    deck: deck,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => reset(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Reset\"));\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\bbbra\\OneDrive\\Documents\\GitHub\\card-counter\\blakjak-counter\\src\\App.js"],"names":["React","useState","HighCards","MedCards","LowCards","App","deck","setDeck","lowThresh","setLowThresh","medThresh","setMedThresh","highThresh","setHighThresh","incrementLow","incrementMed","incrementHigh","reset","low","Math","round","med","high"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport HighCards from './components/HighCards'\nimport MedCards from './components/MedCards'\nimport LowCards from './components/LowCards'\n\nimport './App.scss';\n\nfunction App() {\n\n  const [deck, setDeck] = useState(52)\n  const [lowThresh, setLowThresh] = useState(0)\n  const [medThresh, setMedThresh] = useState(0)\n  const [highThresh, setHighThresh] = useState(0)\n\n  const incrementLow = () => {\n    if (lowThresh < 20) {\n      setLowThresh(lowThresh + 1)\n      setDeck(deck - 1)}\n  }\n\n  const incrementMed = () => {\n    if (medThresh < 12) {\n      setMedThresh(medThresh + 1)\n      setDeck(deck - 1)\n    }\n  }\n\n  const incrementHigh = () => {\n    if (highThresh < 20) {\n      setHighThresh(highThresh + 1)\n      setDeck(deck - 1)\n    }\n  }\n\n  const reset = () => {\n    setLowThresh(0)\n    setMedThresh(0)\n    setHighThresh(0)\n    setDeck(52)\n  }\n\n  const low = Math.round((20 - lowThresh) / deck * 100)\n  const med = Math.round((12 - medThresh) / deck * 100)\n  const high = Math.round((20 - highThresh) / deck * 100)\n\n  return (\n    <div className=\"app\">\n      <h1><span className={deck > 40 ? 'green' : deck > 20 ? 'yellow' : 'red' }>{deck}</span> cards remaining</h1>\n      <LowCards low={low} incrementLow={incrementLow} lowThresh={lowThresh} deck={deck} />\n      <MedCards med={med} incrementMed={incrementMed} medThresh={medThresh} deck={deck} />\n      <HighCards high={high} incrementHigh={incrementHigh} highThresh={highThresh} deck={deck} />\n      <button onClick={() => reset()}>Reset</button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}